name: Label issues
on:
  issues:
    types:
      - reopened
      - opened
env:
  ISSUE_BODY: ${{ github.event.issue.body }}
  ISSUE_TITLE: ${{ github.event.issue.title }}

jobs:
  label_issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            const issueNumber = context.issue.number;
            const contextOwner = context.repo.owner;
            const contextRepo = context.repo.repo;
            
            console.log(process.env.ISSUE_TITLE);
            
            if (process.env.ISSUE_TITLE.length < 10)
            {
              github.rest.issues.update({
                issue_number: issueNumber,
                owner: contextOwner,
                repo: contextRepo,
                state: "not_planned"
              });
            }
            
            var addLabels = ["triage"];
            
            const issueBody = process.env.ISSUE_BODY;
            
            const productsStringRegex = /### Product\(s\)\s*([\w, ]*)/;            
            var productsString = productsStringRegex.exec(issueBody);
            if (productsString)
            {
              var products = productsString[1].split(/[ ,]+/);              
              for (var i = 0; i < products.length; ++i)
              {
                const product = products[i];
                switch (product)
                {
                  case "FxDK": addLabels.push("sdk"); break;
                }
              }
              
              github.rest.issues.addLabels({
                issue_number: issueNumber,
                owner: contextOwner,
                repo: contextRepo,
                labels: addLabels
              });
              
            }
