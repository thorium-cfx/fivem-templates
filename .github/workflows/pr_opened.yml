name: Validate PR
on:
  pull_request:
    types: [ reopened, opened, edited, synchronize, ready_for_review ]

permissions:
  pull-requests: write

jobs:
  input_validation:
    runs-on: ubuntu-latest
    env:
      COMMITS_URL: ${{ github.event.pull_request.commits_url }}
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_DESCR: ${{ github.event.pull_request.body }}
    steps:
      - name: Check PR details
        run: |
          valid=true
          
          if [[ ${#PR_TITLE} -lt 10 ]]; then
            echo "::error::PR title is too small to convey any real meaning."
            valid=false
          fi
          
          if [[ ${#PR_DESCR} -lt 10 ]]; then
            echo "::error::PR body is too small to convey any real meaning."
            valid=false
          fi
          
          if [[ $valid = false ]]; then
            exit 1
          fi
      
      - name: Check commit titles
        run: |
          # get commits json and make an array of commit messages
          readarray -t commitMessages < <(curl -ks "$COMMITS_URL" | jq '.[].commit.message' )
          
          # requires at least 10 characters in description
          commitTitleRegex="^(tweak|fix|feat)\([a-zA-Z0-9\/-]+\): .{10,}"
          valid=true
          
          for (( i=0; i < ${#commitMessages[@]}; i++ )); do
            # remove first and last " (quotes) and get title from message (ends at the first '\n' or the end of the string)
            title=${commitMessages[$i]:1:-1}
            title=${title%%\\n*}
            
            if [[ "$title" =~ $commitTitleRegex ]]; then
              echo "         valid title: $title"
            else
              echo "::error::Invalid title: $title"
              valid=false
            fi
          done
          
          if [[ $valid = false ]]; then
            echo "::error::One or more of your commit titles do not conform to our title rules"
            exit 1
          fi
      
      - name: Inform the user of bad titles
        if: failure() && false
        uses: actions/github-script@v6
        with:
          script: |
            return
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "One or more of your commit titles do not conform to our title rules, make sure they all follow the following pattern: `type(component): description`. Allowed types are: `fix`, `tweak`, or `feat` and description must at least be 10 characters long to convey any meaning."
            });
